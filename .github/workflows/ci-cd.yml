name: CI/CD Pipeline

# 1. Trigger on every PR against main
on:
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: johnny00joe/quantile-service

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build & test (builder stage)
        run: |
          # build only the builder stage, which runs the tests
          docker build --target builder -t $IMAGE_NAME:test-${GITHUB_SHA} .
          docker run --rm $IMAGE_NAME:test-${GITHUB_SHA}

      - name: Build prod image
        id: build
        run: |
          # build the final image
          docker build --target prod -t $IMAGE_NAME:${GITHUB_SHA} .
          # export the tag for downstream jobs
          echo "image_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ needs.build-and-test.outputs.image_tag }}

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    # this ties into a GitHub Environment called "production"
    # configure it in Settings â†’ Environments with required reviewers
    environment:
      name: production
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --name ${{ secrets.EKS_CLUSTER_NAME }} \
            --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          # point the deployment at the newly built image
          kubectl set image deployment/quantile-service \
            quantile-service=${{ env.IMAGE_NAME }}:${{ needs.build-and-test.outputs.image_tag }}
          kubectl rollout status deployment/quantile-service
